# name: .NET Core

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:
#     strategy:
#       matrix:
#         configuration: [Debug, Release]
#     runs-on: ubuntu-latest   # For a list of available runner types, refer to
#                              # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
#     env:
#       Solution_Name: Smashing.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
#       Test_Project_Path: /tests/Inception.Tests.csproj                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
#       #Wap_Project_Directory: your-wap-project-directory-name    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
#       #Wap_Project_Path: your-wap-project-path                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3
#       with:
#         fetch-depth: 0

#     # Install the .NET Core workload
#     - name: Install .NET Core
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: 8.0.x

#     # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
#     - name: Setup MSBuild.exe
#       #uses: microsoft/setup-msbuild@v1.0.2
#       run: dotnet build

#     ## Start a container to Integration Tests
#     #- name: Start containers
#     #  run: docker-compose -f "./tests/IntegrationTests/docker-compose.yml" up -d --build
      
#     # Execute all tests in the solution
#     - name: Execute Tests
#       run: dotnet test
      
#     #  run: docker-compose -f "./tests/IntegrationTests/docker-compose.yml" down
#     - name: Load Performance Tests
#       uses: grafana/k6-action@v0.3.1
#       with:
#         filename: /k6/test-basic.js
#         flags: --vus 50 --duration 10s
#     # Upload Code Coverage by CodeCov  
#     - name: Upload coverage reports to Codecov
#       uses: codecov/codecov-action@v3
#       env: 
#         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#       with:
#         file: coverage.xml